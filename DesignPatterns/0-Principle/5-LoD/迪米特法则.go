package main

//迪米特法则
/*
	一个对象应当对其他对象尽可能少的了解，从而降低各个对象之间的耦合，提高系统的可维护性。
	例如在一个程序中，各个模块之间相互调用时，通常会提供一个统一的接囗来实现。
	这样其他模块不需要了解另外一个模块的内部实现细节，这样当一个模块内部的实现发生改变时，
	不会影响其他模块的使用。（黑盒原理）
*/
// 三个房客->三个房  变成  三个房客->中介->三个房

func main() {

}
